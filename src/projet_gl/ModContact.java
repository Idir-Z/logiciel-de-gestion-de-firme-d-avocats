/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projet_gl;
import java.sql.Connection;
import control.Contact;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Connection;
import model.DBConnection;
import java.sql.ResultSet;

/**
 *
 * @author HP
 */
public class ModContact extends javax.swing.JFrame {
private static ModContact fentre = null;
    /**
     * Creates new form AjoutContact
     */
    public void viderTableau(){
        
     tableContacts.setModel(new javax.swing.table.DefaultTableModel(
    new Object [][] {

    },
    new String [] {
        "type", "valeur"
    }
) {
    boolean[] canEdit = new boolean [] {
        false, false
    };

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
});
    }
    public Contact[] getContactsAjoute(){
        
        int rowsCount = tableContacts.getRowCount();
        Contact[] contacts = new Contact[rowsCount];
        DefaultTableModel tab = (DefaultTableModel)tableContacts.getModel();
        for(int i = 0;i<rowsCount;i++){
            String type = (String)tab.getValueAt(i, 0);
            String valeur = (String)tab.getValueAt(i, 1);
            contacts[i]= new Contact(type, valeur);
        }
        return contacts; 
    }
    private ModContact() {
        initComponents();
    }
    public void remplirTabContacts(long idAvocat){
        try {
            Connection con = DBConnection.etablirConnection();
            String req = "select `type`,`valeur` FROM avocat_contact ac,avocat a  WHERE a.idAvocat = ac.idAvocat AND a.NumeroPermis = ? ";
            
            PreparedStatement statement = con.prepareStatement(req);
            statement.setLong(1, idAvocat);
            ResultSet res = statement.executeQuery();
            DefaultTableModel mod = (DefaultTableModel)tableContacts.getModel();
            while(res.next()){
               Object[] row = {res.getString("type"),res.getString("valeur")};
            mod.addRow(row);
            }
            
        } catch (Exception e) {
        }
    }
    public static ModContact ouvrirFnetreModContact(){
        if(fentre==null){
            fentre = new ModContact();
        }
        return fentre;      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelControl = new javax.swing.JPanel();
        boutonAjoutAv = new javax.swing.JButton();
        boutonSuppressionContact = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        affichageListContacts = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableContacts = new javax.swing.JTable();

        setResizable(false);

        panelControl.setPreferredSize(new java.awt.Dimension(200, 418));

        boutonAjoutAv.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boutonAjoutAv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        boutonAjoutAv.setText("Ajouter");
        boutonAjoutAv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boutonAjoutAv.setIconTextGap(8);
        boutonAjoutAv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjoutAvActionPerformed(evt);
            }
        });

        boutonSuppressionContact.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boutonSuppressionContact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        boutonSuppressionContact.setText("Supprimer");
        boutonSuppressionContact.setEnabled(false);
        boutonSuppressionContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSuppressionContactActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/confirm.png"))); // NOI18N
        jButton1.setText("Confirmer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonSuppressionContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonAjoutAv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(boutonAjoutAv, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(boutonSuppressionContact, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(panelControl, java.awt.BorderLayout.LINE_START);

        tableContacts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "type", "valeur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableContacts);
        if (tableContacts.getColumnModel().getColumnCount() > 0) {
            tableContacts.getColumnModel().getColumn(1).setResizable(false);
        }
        ListSelectionModel selectionModel = tableContacts.getSelectionModel();
        selectionModel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent  evt) {
                //int rowsNum = tableAvocat.getSelectedRowCount();

                if (!evt.getValueIsAdjusting()) {
                    // If a row is selected, enable the button
                    if (tableContacts.getSelectedRow() != -1) {
                        boutonSuppressionContact.setEnabled(true);

                    } else  {
                        boutonSuppressionContact.setEnabled(false);
                    }

                }

            }
        });

        javax.swing.GroupLayout affichageListContactsLayout = new javax.swing.GroupLayout(affichageListContacts);
        affichageListContacts.setLayout(affichageListContactsLayout);
        affichageListContactsLayout.setHorizontalGroup(
            affichageListContactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affichageListContactsLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        affichageListContactsLayout.setVerticalGroup(
            affichageListContactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affichageListContactsLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(affichageListContacts, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void boutonAjoutAvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjoutAvActionPerformed
        DefaultTableModel mod = (DefaultTableModel)tableContacts.getModel();
        ContactInputPan p = new ContactInputPan();

        int resultat = JOptionPane.showConfirmDialog(this, p, "Enter Information",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if(resultat == JOptionPane.OK_OPTION){
            Object[] row = {p.getTypeContact(),p.getValeurContact()};
            mod.addRow(row);
        }
    }//GEN-LAST:event_boutonAjoutAvActionPerformed

    private void boutonSuppressionContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSuppressionContactActionPerformed
     int[] rows =tableContacts.getSelectedRows();
     DefaultTableModel model = (DefaultTableModel) tableContacts.getModel();
     for(int i = rows.length - 1; i >= 0; i--){
         model.removeRow(rows[i]);
     }
    }//GEN-LAST:event_boutonSuppressionContactActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModContact.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModContact().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel affichageListContacts;
    private javax.swing.JButton boutonAjoutAv;
    private javax.swing.JButton boutonSuppressionContact;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelControl;
    private javax.swing.JTable tableContacts;
    // End of variables declaration//GEN-END:variables
}
